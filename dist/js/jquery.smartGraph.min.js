/**
* jquery.smartGraph 1.3.0
* https://github.com/oplaner4/jquery.smartGraph
* by Ondrej Planer, oplaner4@gmail.com
*
*
* This library requires jQuery.js
* See the documentation before using this library please
* jquery.smartGraph.js may be freely distributed under the MIT license.
*
* Copyright 2020, Ondrej Planer
 *
 *
 * PRESERVE THIS PLEASE
*/

!function (t) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], t) : "undefined" != typeof exports ? module.exports = t(require("jquery")) : t(window.jQuery) }(function (t) { "use strict"; var e = "smartGraph", n = function (t, e) { this._settingsManagerInstance = new c(e, t), this._ctxManagerInstance = new g(this._settingsManagerInstance), this._creatorManagerInstance = new i(this._ctxManagerInstance), this._mousePosition = null, this._activeState = !1, this.initWindowEvents().reconstruct().initSourceElementEvents() }; n.prototype.initWindowEvents = function () { let e = this; return t(window).on("resize", function () { e._settingsManagerInstance.getOptions().responsive.enable && (e._ctxManagerInstance.clear(), e._settingsManagerInstance.updateWidth().updateHeight(), e.create()) }).on("keydown", function (t) { e._activeState && (38 === t.which && (t.preventDefault(), e.moveUp()), 40 === t.which && (t.preventDefault(), e.moveDown()), 37 === t.which && (t.preventDefault(), e.moveLeft()), 39 === t.which && (t.preventDefault(), e.moveRight()), 107 === t.which && (t.preventDefault(), e.zoomIn()), 109 === t.which && (t.preventDefault(), e.zoomOut())) }).trigger("resize"), e }, n.prototype.getPointByActualMousePosition = function () { return new l((this._mousePosition.getX() - this._settingsManagerInstance.getCenter().getX()) / this._settingsManagerInstance.getScale(), (this._settingsManagerInstance.getCenter().getY() - this._mousePosition.getY()) / this._settingsManagerInstance.getScale(), !1) }, n.prototype.initSourceElementEvents = function () { let n = this, i = !1, s = null; return n._settingsManagerInstance.getElement().addClass(t.fn.smartGraph.classes.root).on("mousemove touchmove", function (e) { let s = t(this).offset(), o = e; e.touches && (o = e.touches[0]), i && n.setOptions({ move: { x: n._settingsManagerInstance.getOptions().move.x - n._mousePosition.getX() - s.left + o.clientX, y: n._settingsManagerInstance.getOptions().move.y + n._mousePosition.getY() + s.top - o.clientY - t(window).scrollTop() } }), n._mousePosition = new l(o.clientX - s.left, o.clientY - s.top + t(window).scrollTop(), !0) }).on("mouseup touchend", function () { clearTimeout(s), this.classList.remove(t.fn.smartGraph.classes.moving), i = !1 }).on("mouseover mouseout touchstart touchend", function () { i = !1, n._mousePosition = n._settingsManagerInstance.getCenter() }).on("mousedown touchstart", function (o) { o.preventDefault(); let r = t(this); s = setTimeout(function () { i = !0, r.addClass(t.fn.smartGraph.classes.moving) }, 100), r.trigger(e + ".click", [n._settingsManagerInstance, n.getPointByActualMousePosition()]) }).on("mouseover touchstart", function () { n._activeState = !0 }).on("mouseout touchend", function () { n._activeState = !1 }).on("mousewheel DOMMouseScroll", function (t) { t.preventDefault(), t.originalEvent.wheelDelta > 0 || t.originalEvent.detail < 0 ? n.zoomIn() : n.zoomOut() }).trigger(e + ".init", [n._settingsManagerInstance]), n }, n.prototype.processData = function () { let t = this; return t._settingsManagerInstance.getOptions().data.points.forEach(function (e) { t._creatorManagerInstance.drawPoint(e) }), t._settingsManagerInstance.getOptions().data.functions.forEach(function (e) { t._creatorManagerInstance.drawFunction(e) }), t }, n.prototype.create = function () { return this.processData()._creatorManagerInstance.constructAxises(), this }, n.prototype.reconstruct = function () { return this._ctxManagerInstance.clear(), this.create() }, n.prototype.setOptions = function (t) { return this._settingsManagerInstance.setOptions(t, !0), this.reconstruct() }, n.prototype.updateData = function (t) { return this.setOptions({ data: t }) }, n.prototype.addData = function (t) { let e = this._settingsManagerInstance.getOptions().data; return t.hasOwnProperty("points") && t.points.forEach(function (t) { e.points.push(t) }), t.hasOwnProperty("functions") && t.functions.forEach(function (t) { e.functions.push(t) }), this.updateData(e) }, n.prototype.moveRight = function () { return this.setOptions({ move: { x: this._settingsManagerInstance.getOptions().move.x - this._settingsManagerInstance.getTicksDistance("x") } }) }, n.prototype.moveLeft = function () { return this.setOptions({ move: { x: this._settingsManagerInstance.getOptions().move.x + this._settingsManagerInstance.getTicksDistance("x") } }) }, n.prototype.moveUp = function () { return this.setOptions({ move: { y: this._settingsManagerInstance.getOptions().move.y - this._settingsManagerInstance.getTicksDistance("y") } }) }, n.prototype.moveDown = function () { return this.setOptions({ move: { y: this._settingsManagerInstance.getOptions().move.y + this._settingsManagerInstance.getTicksDistance("y") } }) }, n.prototype.zoomIn = function () { return this._settingsManagerInstance.increaseScale(), this.reconstruct() }, n.prototype.zoomOut = function () { return this._settingsManagerInstance.decreaseScale(), this.reconstruct() }, n.throwTypeError = function (t, e) { throw new TypeError('Property "' + t + '" is not specified or is of wrong type at "' + e + '"') }, n.throwRangeError = function (t, e) { throw new RangeError('Property "' + t + '" seems invalid at "' + e + '"') }; var i = function (t) { this._ctxManagerInstance = t }; i.prototype.getCtxManager = function () { return this._ctxManagerInstance }, i.prototype.getSettingsManager = function () { return this.getCtxManager().getSettingsManager() }, i.prototype.drawAxisesLabels = function () { let t = this.getSettingsManager().getOptions(); return this.getCtxManager().setColor(t.axises.x.label.color).setStartPoint(new l(this.getSettingsManager().getWidth(), this.getSettingsManager().getCenter().getY() + t.axises.x.label.padding, !0)).drawText(t.axises.x.label.caption, t.axises.labels.font, "right", "top").setColor(t.axises.y.label.color).setStartPoint(new l(this.getSettingsManager().getCenter().getX() - t.axises.y.label.padding, 0, !0)).drawText(t.axises.y.label.caption, t.axises.labels.font, "right", "top"), this }, i.prototype.getAxisXNegativeCreatorManager = function () { return new r(this.getCtxManager(), "x", new l(0, this.getSettingsManager().getCenter().getY(), !0)) }, i.prototype.getAxisXPositiveCreatorManager = function () { return new r(this.getCtxManager(), "x", new l(this.getSettingsManager().getWidth(), this.getSettingsManager().getCenter().getY(), !0)) }, i.prototype.constructAxises = function () { return this.drawAxisesLabels().drawCenterTitle().getAxisXNegativeCreatorManager().construct(), this.getAxisXPositiveCreatorManager().construct(), new r(this.getCtxManager(), "y", new l(this.getSettingsManager().getCenter().getX(), 0, !0)).construct(), new r(this.getCtxManager(), "y", new l(this.getSettingsManager().getCenter().getX(), this.getSettingsManager().getHeight(), !0)).construct(), this }, i.prototype.drawCenterTitle = function () { let t = this.getSettingsManager().getOptions(); return this.getCtxManager().setColor(t.axises.ticks.titles.color).setStartPoint(new l(-this.getSettingsManager().getModifiedTickTitleDistance(), -1 * this.getSettingsManager().getModifiedTickTitleDistance(), !1)).drawText(t.axises.ticks.titles.render(0, this.getAxisXNegativeCreatorManager()), t.axises.ticks.titles.font, "right", "top"), this }, i.prototype.drawFunction = function (t) { return new s(this.getCtxManager(), t, this.getAxisXNegativeCreatorManager().getLength(), this.getAxisXPositiveCreatorManager().getLength()).draw(), this }, i.prototype.drawPoint = function (t) { return new o(this.getCtxManager(), t, !1).draw(), this }; var s = function (e, n, i, s) { this._ctxManagerInstance = e, this._actualExtendedProps = t.extend(!0, {}, this._ctxManagerInstance.getSettingsManager().getOptions().function, n), this.checkCompulsoryProps(), this._xNegativeAxisLength = i, this._xPositiveAxisLength = s, this._lastPointExtendedO = null, this._drawn = !1, this._modifier = this._actualExtendedProps.modifier, this._step = this._actualExtendedProps.step, this._intervalStart = this._actualExtendedProps.interval[0], this._intervalEnd = this._actualExtendedProps.interval[1], this._relation = this._actualExtendedProps.relation }; s.prototype.checkCompulsoryProps = function () { "function" != typeof this._actualExtendedProps.relation && n.throwTypeError("relation", "options.data.functions[i]"), "object" == typeof this._actualExtendedProps.interval && void 0 !== this._actualExtendedProps.interval.length || n.throwTypeError("interval", "options.data.functions[i]"), this._actualExtendedProps.interval.length < 2 && n.throwRangeError("interval", "options.data.functions[i]"), "number" == typeof this._actualExtendedProps.interval[0] && "number" == typeof this._actualExtendedProps.interval[1] || n.throwTypeError("interval", "options.data.functions[i]"), this._actualExtendedProps.interval[0] > this._actualExtendedProps.interval[1] && n.throwRangeError("interval", "options.data.functions[i]") }, s.prototype.getCtxManager = function () { return this._ctxManagerInstance }, s.prototype.isDrawn = function () { return this._drawn }, s.prototype.getIntervalLowerBound = function () { return Math.max(-1 * this._xNegativeAxisLength / this.getCtxManager().getSettingsManager().getScale(), this._intervalStart) }, s.prototype.getIntervalUpperBound = function () { return Math.min(this._xPositiveAxisLength / this.getCtxManager().getSettingsManager().getScale(), this._intervalEnd) }, s.prototype.draw = function () { if (this.isDrawn()) return this; let t = this.getIntervalUpperBound(); for (let e = this.getIntervalLowerBound(); e < t; e += this._step)this.drawNextPoint(e); return this.drawNextPoint(t), this._drawn = !0, this }, s.prototype.drawNextPoint = function (e) { let n = this._relation(e); if (n === 1 / 0 || n === -1 / 0 || NaN === n) return this._lastPointExtendedO = null, this; this._actualExtendedProps = t.extend(!0, {}, this._actualExtendedProps, this._modifier(e, n, null === this._lastPointExtendedO ? null : this._lastPointExtendedO.x, null === this._lastPointExtendedO ? null : this._lastPointExtendedO.y, this.getCtxManager().getSettingsManager())); let i = this.getExtendedPointO(e, n, this._actualExtendedProps); return this.drawConnectline(i), new o(this.getCtxManager(), i, !0).draw(), this._lastPointExtendedO = i, this }, s.prototype.drawConnectline = function (t) { return this._actualExtendedProps.connectlines.show && null !== this._lastPointExtendedO && this.getCtxManager().setStartPoint(new l(t.x, t.y, !1)).setColor(this._actualExtendedProps.connectlines.color).drawLine(new l(this._lastPointExtendedO.x, this._lastPointExtendedO.y, !1), this._actualExtendedProps.connectlines.thickness, this._actualExtendedProps.connectlines.dash), this }, s.prototype.getExtendedPointO = function (t, e) { let n = this.getCtxManager().getSettingsManager().getOptions(); return { x: t, y: e, size: null === this._actualExtendedProps.points.size ? n.point.size : this._actualExtendedProps.points.size, thickness: null === this._actualExtendedProps.points.thickness ? n.point.thickness : this._actualExtendedProps.points.thickness, color: null === this._actualExtendedProps.points.color ? n.point.color : this._actualExtendedProps.points.color, hintlines: { show: null === this._actualExtendedProps.points.hintlines.show ? n.function.points.hintlines.show : this._actualExtendedProps.points.hintlines.show, color: null === this._actualExtendedProps.points.hintlines.color ? n.function.points.hintlines.color : this._actualExtendedProps.points.hintlines.color, thickness: null === this._actualExtendedProps.points.hintlines.thickness ? n.function.points.hintlines.show : this._actualExtendedProps.points.hintlines.thickness, dash: null === this._actualExtendedProps.points.hintlines.dash ? n.function.points.hintlines.dash : this._actualExtendedProps.points.hintlines.dash }, label: { render: null === this._actualExtendedProps.points.labels.render ? n.point.label.render : this._actualExtendedProps.points.labels.render, font: null === this._actualExtendedProps.points.labels.font ? n.point.label.font : this._actualExtendedProps.points.labels.font, color: null === this._actualExtendedProps.points.labels.color ? n.point.label.color : this._actualExtendedProps.points.labels.color, padding: null === this._actualExtendedProps.points.labels.padding ? n.point.label.padding : this._actualExtendedProps.points.labels.padding } } }; var o = function (e, i, s) { this._ctxManagerInstance = e, this._extendedProps = s ? i : t.extend(!0, {}, this._ctxManagerInstance.getSettingsManager().getOptions().point, i), "number" != typeof this._extendedProps.x && n.throwTypeError("x", "options.data.points[i]"), "number" != typeof this._extendedProps.y && n.throwTypeError("y", "options.data.points[i]"), this._drawn = !1 }; o.prototype.getCtxManager = function () { return this._ctxManagerInstance }, o.prototype.isDrawn = function () { return this._drawn }, o.prototype.draw = function () { if (this.isDrawn()) return this; let t = this._extendedProps.size / (2 * this.getCtxManager().getSettingsManager().getScale()); return this.getCtxManager().setColor(this._extendedProps.color).setStartPoint(new l(this._extendedProps.x - t, this._extendedProps.y, !1)).drawLine(new l(this._extendedProps.x + t, this._extendedProps.y, !1), this._extendedProps.thickness, []).setStartPoint(new l(this._extendedProps.x, this._extendedProps.y - t, !1)).drawLine(new l(this._extendedProps.x, this._extendedProps.y + t, !1), this._extendedProps.thickness, []), this._drawn = !0, this.drawHintline().drawLabel() }, o.prototype.drawHintline = function () { return this._extendedProps.hintlines.show && this.getCtxManager().setColor(this._extendedProps.hintlines.color).setStartPoint(new l(this._extendedProps.x, this._extendedProps.y, !1)).drawLine(new l(0, this._extendedProps.y, !1), this._extendedProps.hintlines.thickness, this._extendedProps.hintlines.dash).drawLine(new l(this._extendedProps.x, 0, !1), this._extendedProps.hintlines.thickness, this._extendedProps.hintlines.dash), this }, o.prototype.drawLabel = function () { return this.getCtxManager().setColor(this._extendedProps.label.color).setStartPoint(new l(this._extendedProps.x + (this._extendedProps.x > 0 ? 1 : -1) * this._extendedProps.label.padding / this.getCtxManager().getSettingsManager().getScale(), this._extendedProps.y + (this._extendedProps.y > 0 ? 1 : -1) * this._extendedProps.label.padding / this.getCtxManager().getSettingsManager().getScale(), !1)).drawText(this._extendedProps.label.render(this._extendedProps.x, this._extendedProps.y, this.getCtxManager().getSettingsManager()), this._extendedProps.label.font, this._extendedProps.x < 0 ? "right" : "left", this._extendedProps.y < 0 ? "top" : "bottom"), this }; var r = function (t, e, n) { this._axis = e, this._endPoint = n, this._ctxManagerInstance = t }; r.prototype.getCtxManager = function () { return this._ctxManagerInstance }, r.prototype.getSettingsManager = function () { return this.getCtxManager().getSettingsManager() }, r.prototype.getAxis = function () { return this._axis }, r.prototype.getEndPoint = function () { return this._endPoint }, r.prototype.isVisible = function () { return (!(this.getSettingsManager().getCenter().getX() < 0) || "y" !== this.getAxis() && 0 !== this.getEndPoint().getX()) && (!(this.getSettingsManager().getCenter().getX() > this.getSettingsManager().getWidth() && ("y" === this.getAxis() || this.getEndPoint().getX() > 0)) && ((!(this.getSettingsManager().getCenter().getY() < 0) || "x" !== this.getAxis() && 0 !== this.getEndPoint().getY()) && !(this.getSettingsManager().getCenter().getY() > this.getSettingsManager().getHeight() && ("x" === this.getAxis() || this.getEndPoint().getY() > 0)))) }, r.prototype.isNegative = function () { return this.getEndPoint().getX() < this.getSettingsManager().getCenter().getX() || this.getEndPoint().getY() > this.getSettingsManager().getCenter().getY() }, r.prototype.getLength = function () { return this.getEndPoint().getDistanceFrom(this.getSettingsManager().getCenter()) }, r.prototype.getCountNecessaryTicks = function () { return Math.ceil(this.getLength() / (this.getSettingsManager().getModifiedTicksStep(this.getAxis()) * this.getSettingsManager().getScale())) }, r.prototype.getAxisOptions = function () { return this.getSettingsManager().getOptions().axises[this.getAxis()] }, r.prototype.construct = function () { if (this.isVisible()) { this.getCtxManager().setColor(this.getAxisOptions().color).setStartPoint(this.getSettingsManager().getCenter()).drawLine(this.getEndPoint(), this.getSettingsManager().getOptions().axises.thickness, []); let t = this.getCountNecessaryTicks(); for (let e = 1; e < t; e += 1) { let t = e * this.getSettingsManager().getModifiedTicksStep(this.getAxis()); this.isNegative() && (t *= -1), this.drawTick(t) } } return this }, r.prototype.drawTick = function (e) { let n = new a(this.getSettingsManager(), this.getAxis(), e); return this.getCtxManager().setColor(this.getAxisOptions().ticks.color).setStartPoint(n.getLineStartPoint()).drawLine(n.getLineEndPoint(), this.getSettingsManager().getOptions().axises.ticks.thickness, []).setColor(this.getAxisOptions().ticks.titles.color).setStartPoint(n.getTitlePoint()).drawText(this.getAxisOptions().ticks.titles.render(e, this), this.getSettingsManager().getOptions().axises.ticks.titles.font, t.fn.smartGraph.constants.axises[this.getAxis()].ticks.titles.align, t.fn.smartGraph.constants.axises[this.getAxis()].ticks.titles.baseline), this }, r.prototype.getOptimallyRoundedTick = function (t) { if (0 === t) return 0; let e = this.isNegative() ? t - this.getSettingsManager().getModifiedTicksStep(this.getAxis()) : t + this.getSettingsManager().getModifiedTicksStep(this.getAxis()), n = 1, i = 0; for (; 0 === (i = t.roundDigits(n)) || i === e.roundDigits(n);)n += 2; return i }; var a = function (t, e, n) { this._axis = e, this._value = n, this._settingsManagerInstance = t }; a.prototype.getSettingsManager = function () { return this._settingsManagerInstance }, a.prototype.getAxis = function () { return this._axis }, a.prototype.getValue = function () { return this._value }, a.prototype.getLineStartPoint = function () { return "x" === this.getAxis() ? new l(this.getValue(), -1 * this.getSettingsManager().getModifiedTickSize(), !1) : "y" === this.getAxis() ? new l(-1 * this.getSettingsManager().getModifiedTickSize(), this.getValue(), !1) : new l(0, 0, !0) }, a.prototype.getLineEndPoint = function () { return "x" === this.getAxis() ? new l(this.getValue(), this.getSettingsManager().getModifiedTickSize(), !1) : "y" === this.getAxis() ? new l(this.getSettingsManager().getModifiedTickSize(), this.getValue(), !1) : new l(0, 0, !0) }, a.prototype.getTitlePoint = function () { return "x" === this.getAxis() ? new l(this.getValue(), -1 * this.getSettingsManager().getModifiedTickTitleDistance(), !1) : "y" === this.getAxis() ? new l(-1 * this.getSettingsManager().getModifiedTickTitleDistance(), this.getValue(), !1) : new l(0, 0, !0) }; var l = function (t, e, n) { this._x = t, this._y = e, this._real = n }; l.prototype.getDistanceFrom = function (t) { return Math.sqrt(Math.pow(t.getX() - this.getX(), 2) + Math.pow(t.getY() - this.getY(), 2)) }, l.prototype.equals = function (e) { return this.getDistanceFrom(e) < t.fn.smartGraph.constants.elementaryDistance }, l.prototype.getX = function () { return this._x }, l.prototype.getY = function () { return this._y }, l.prototype.isReal = function () { return this._real }; var c = function (e, n) { this._options = null, this._elem = n, this._canvas = t("canvas", this._elem), this._width = this._canvas.outerWidth(), this._height = this._canvas.outerHeight(), this._defaultScale = 1, this.setOptions(e, !1), this._modifierTickStep = { x: 1, y: 1 }, this._scale = this.getDefaultScale() }; c.prototype.getElement = function () { return this._elem }, c.prototype.setOptions = function (e, n) { let i = this; return i._options = t.extend(!0, {}, n ? i._options : t.fn.smartGraph.defaults, e), null === i._options.lines.color && (i._options.lines.color = i._options.color), null === i._options.lines.color && (i._options.lines.color = i._options.color), null === i._options.texts.color && (i._options.texts.color = i._options.color), null === i._options.point.color && (i._options.point.color = i._options.color), null === i._options.point.hintlines.color && (i._options.point.hintlines.color = i._options.lines.color), null === i._options.point.label.color && (i._options.point.label.color = i._options.texts.color), null === i._options.point.thickness && (i._options.point.thickness = i._options.lines.thickness), null === i._options.point.hintlines.thickness && (i._options.point.hintlines.thickness = i._options.lines.thickness), null === i._options.function.connectlines.color && (i._options.function.connectlines.color = i._options.lines.color), null === i._options.function.connectlines.thickness && (i._options.function.connectlines.thickness = i._options.lines.thickness), null === i._options.function.points.color && (i._options.function.points.color = i._options.point.color), null === i._options.function.points.size && (i._options.function.points.size = i._options.point.size), null === i._options.function.points.thickness && (i._options.function.points.thickness = i._options.point.thickness), null === i._options.function.points.hintlines.color && (i._options.function.points.hintlines.color = i._options.point.hintlines.color), null === i._options.function.points.hintlines.size && (i._options.function.points.hintlines.size = i._options.point.hintlines.size), null === i._options.function.points.hintlines.thickness && (i._options.function.points.hintlines.thickness = i._options.point.hintlines.thickness), null === i._options.function.points.hintlines.dash && (i._options.function.points.hintlines.dash = i._options.point.hintlines.dash), null === i._options.function.points.labels.color && (i._options.function.points.labels.color = i._options.point.label.color), null === i._options.function.points.labels.render && (i._options.function.points.labels.render = i._options.point.label.render), null === i._options.function.points.labels.font && (i._options.function.points.labels.font = i._options.point.label.font), null === i._options.function.points.labels.padding && (i._options.function.points.labels.padding = i._options.point.label.padding), null === i._options.axises.thickness && (i._options.axises.thickness = i._options.lines.thickness), null === i._options.axises.ticks.thickness && (i._options.axises.ticks.thickness = i._options.axises.thickness), null === i._options.axises.color && (i._options.axises.color = i._options.lines.color), null === i._options.axises.ticks.color && (i._options.axises.ticks.color = i._options.lines.color), null === i._options.axises.ticks.titles.color && (i._options.axises.ticks.titles.color = i._options.texts.color), null === i._options.axises.labels.color && (i._options.axises.labels.color = i._options.texts.color), t.fn.smartGraph.constants.axises.names.forEach(function (t) { null === i._options.axises[t].ticks.step && (i._options.axises[t].ticks.step = i._options.axises.ticks.step), null === i._options.axises[t].ticks.titles.render && (i._options.axises[t].ticks.titles.render = i._options.axises.ticks.titles.render), null === i._options.axises[t].color && (i._options.axises[t].color = i._options.axises.color), null === i._options.axises[t].ticks.color && (i._options.axises[t].ticks.color = i._options.axises.ticks.color), null === i._options.axises[t].ticks.titles.color && (i._options.axises[t].ticks.titles.color = i._options.axises.ticks.titles.color), null === i._options.axises[t].label.color && (i._options.axises[t].label.color = i._options.axises.labels.color) }), null === i._options.function.step && (i._options.function.step = i._options.axises.x.ticks.step), i._options.responsive.enable ? i.getElement().addClass(t.fn.smartGraph.classes.responsive) : i.getElement().removeClass(t.fn.smartGraph.classes.responsive), i.setDefaultScale() }, c.prototype.getOptions = function () { return this._options }, c.prototype.getTicksDistance = function (t) { return this.getScale() * (this.getOptions().axises[t].ticks.step * this._modifierTickStep[t]) }, c.prototype.getModifiedTicksStep = function (e) { return this.getScale() === this.getDefaultScale() ? this.getOptions().axises[e].ticks.step : (this.getTicksDistance(e) < t.fn.smartGraph.constants.readableTicksDistance[0] ? this._modifierTickStep[e] = t.fn.smartGraph.constants.readableTicksDistance[1] / (this.getOptions().axises[e].ticks.step * this.getScale()) : this.getTicksDistance(e) > t.fn.smartGraph.constants.readableTicksDistance[1] && (this._modifierTickStep[e] = t.fn.smartGraph.constants.readableTicksDistance[0] / (this.getOptions().axises[e].ticks.step * this.getScale())), this.getOptions().axises[e].ticks.step * this._modifierTickStep[e]) }, c.prototype.getModifiedTickSize = function () { return this.getOptions().axises.ticks.size / (2 * this.getScale()) }, c.prototype.getModifiedTickTitleDistance = function () { return (this.getOptions().axises.ticks.size + this.getOptions().axises.ticks.titles.padding) / (2 * this.getScale()) }, c.prototype.updateWidth = function () { return this._width = this.getElement().outerWidth(), this.getCanvas().attr("width", this._width), this }, c.prototype.updateHeight = function () { return this._height = this.getElement().outerWidth() / this.getOptions().responsive.ratio, this.getCanvas().attr("height", this._height), this }, c.prototype.getWidth = function () { return this._width }, c.prototype.getHeight = function () { return this._height }, c.prototype.getCenter = function () { return new l(this.getWidth() / 2 + this.getOptions().move.x, this.getHeight() / 2 - this.getOptions().move.y, !0) }, c.prototype.getCanvas = function () { return this._canvas }, c.prototype.getScale = function () { return this._scale }, c.prototype.getDefaultScale = function () { return this._defaultScale }, c.prototype.setDefaultScale = function () { return this._defaultScale = t.fn.smartGraph.constants.readableTicksDistance.reduce(function (t, e) { return (t + e) / 2 }) / Math.min(this.getOptions().axises.x.ticks.step, this.getOptions().axises.y.ticks.step), this }, c.prototype.increaseScale = function () { return this._scale /= t.fn.smartGraph.constants.scaleElementaryChange, this }, c.prototype.decreaseScale = function () { return this._scale *= t.fn.smartGraph.constants.scaleElementaryChange, this }; var g = function (e) { this._settingsManagerInstance = e, this._ctx = this.getSettingsManager().getCanvas().get(0).getContext("2d"), this._color = t.fn.smartGraph.defaults.color, this._startPoint = new l(0, 0, !0) }; g.prototype.getSettingsManager = function () { return this._settingsManagerInstance }, g.prototype.drawLine = function (t, e, n) { return this.getCtx().beginPath(), this.getCtx().moveTo(this.getRealX(this.getStartPoint()), this.getRealY(this.getStartPoint())), this.getCtx().lineTo(this.getRealX(t), this.getRealY(t)), this.getCtx().strokeStyle = this.getColor(), this.getCtx().lineWidth = e, this.getCtx().setLineDash(n), this.getCtx().stroke(), this }, g.prototype.drawText = function (t, e, n, i) { return this.getCtx().font = e, this.getCtx().fillStyle = this.getColor(), this.getCtx().textAlign = n, this.getCtx().textBaseline = i, this.getCtx().fillText(t, this.getRealX(this.getStartPoint()), this.getRealY(this.getStartPoint())), this }, g.prototype.getCtx = function () { return this._ctx }, g.prototype.setColor = function (t) { return this._color = t, this }, g.prototype.getColor = function () { return this._color }, g.prototype.setStartPoint = function (t) { return this._startPoint = t, this }, g.prototype.getStartPoint = function () { return this._startPoint }, g.prototype.clear = function () { return this.getCtx().clearRect(0, 0, this.getSettingsManager().getWidth(), this.getSettingsManager().getHeight()), this }, g.prototype.getRealX = function (t) { return t.isReal() ? t.getX() : this.getSettingsManager().getCenter().getX() + t.getX() * this.getSettingsManager().getScale() }, g.prototype.getRealY = function (t) { return t.isReal() ? t.getY() : this.getSettingsManager().getCenter().getY() - t.getY() * this.getSettingsManager().getScale() }, t.fn.smartGraph = function (i) { let s = i instanceof String || "string" == typeof i, o = arguments; if (s && "instance" === i) { let i = this.data("smartGraphManagerInstance"); if (i instanceof n) return i; t.error(e + " has not been initialized") } return this.each(function () { let e = t(this); if (s) { let t = e.data("smartGraphManagerInstance"); t instanceof n && t[i] instanceof Function && t[i].apply(t, Array.prototype.slice.call(o, 1)) } else e.data("smartGraphManagerInstance") || e.data("smartGraphManagerInstance", new n(e, i)) }) }, t.fn.smartGraph.classes = { root: "smart-graph", responsive: "smart-graph-responsive", moving: "smart-graph-moving" }, t.fn.smartGraph.constants = { axises: { names: new Array("x", "y"), x: { ticks: { titles: { baseline: "top", align: "center" } } }, y: { ticks: { titles: { baseline: "middle", align: "right" } } } }, elementaryDistance: 4, scaleElementaryChange: .9, readableTicksDistance: [40, 90] }, t.fn.smartGraph.defaults = { color: "#343a40", axises: { thickness: null, color: null, ticks: { step: 1, size: 8, thickness: null, color: null, titles: { font: "10px Calibri", padding: 10, color: null, render: function (t, e) { return e.getOptimallyRoundedTick(t) } } }, labels: { font: "20px Calibri", color: null }, x: { color: null, label: { caption: "x", color: null, padding: 20 }, ticks: { step: null, color: null, titles: { color: null, render: null } } }, y: { color: null, label: { caption: "y", color: null, padding: 20 }, ticks: { step: null, color: null, titles: { color: null, render: null } } } }, data: { points: [], functions: [] }, point: { size: 10, thickness: 2, color: null, hintlines: { show: !1, color: null, thickness: null, dash: [2, 2] }, label: { font: "13px Calibri", color: null, padding: 7, render: function (t, e) { return "(" + t.roundDigits(2) + ", " + e.roundDigits(2) + ")" } } }, function: { step: null, modifier: function () { return null }, connectlines: { show: !0, color: null, thickness: null, dash: [] }, points: { color: null, size: null, thickness: null, hintlines: { show: null, color: null, thickness: null, dash: null }, labels: { font: null, color: null, padding: null, render: function () { return "" } } } }, lines: { color: null, thickness: 1 }, texts: { color: null }, move: { x: 0, y: 0 }, responsive: { enable: !0, ratio: 16 / 9 } }, Number.prototype.roundDigits = function (t) { let e = Math.pow(10, t); return Math.round(this.valueOf() * e) / e } });