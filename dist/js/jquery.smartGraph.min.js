/**
* jquery.smartGraph 1.2.0
* https://github.com/oplaner4/jquery.smartGraph
* by Ondrej Planer, oplaner4@gmail.com
*
*
* This library requires jQuery.js
* See the documentation before using this library please
* jquery.smartGraph.js may be freely distributed under the MIT license.
*
* Copyright 2020, Ondrej Planer
 *
 *
 * PRESERVE THIS PLEASE
*/

!function (t) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], t) : "undefined" != typeof exports ? module.exports = t(require("jquery")) : t(window.jQuery) }(function (t) { "use strict"; var e = "smartGraph", n = function (n, s) { var o = this; o._settingsManagerInstance = new r(s, n), o._ctxManagerInstance = new g(o._settingsManagerInstance), o._creatorManagerInstance = new i(o._ctxManagerInstance), o._mousePosition = null, o._activeState = !1, o._mouseMovingState = !1, o._movingStateTimeout = null, t(window).on("resize", function () { o.getSettingsManager().getOptions().responsive.enable && (o.getCtxManager().clear(), o.getSettingsManager().updateWidth().updateHeight(), o.create()) }).on("keydown", function (t) { o._activeState && (38 == t.which && (t.preventDefault(), o.moveUp()), 40 == t.which && (t.preventDefault(), o.moveDown()), 37 == t.which && (t.preventDefault(), o.moveLeft()), 39 == t.which && (t.preventDefault(), o.moveRight()), 107 == t.which && (t.preventDefault(), o.zoomIn()), 109 == t.which && (t.preventDefault(), o.zoomOut())) }).trigger("resize"), o.reconstruct().getSettingsManager().getElement().addClass(t.fn.smartGraph.classes.root).on("mousemove touchmove", function (e) { var n = o.getSettingsManager().getElement().offset(), i = e; e.touches && (i = e.touches[0]), o._mouseMovingState && o.setOptions({ move: { x: o.getSettingsManager().getOptions().move.x - o.getMousePosition().getX() - n.left + i.clientX, y: o.getSettingsManager().getOptions().move.y + o.getMousePosition().getY() + n.top - i.clientY - t(window).scrollTop() } }), o.setMousePosition(i.clientX - n.left, i.clientY - n.top + t(window).scrollTop()) }).on("mouseup touchend", function () { clearTimeout(o._movingStateTimeout), t(this).removeClass(t.fn.smartGraph.classes.moving), o._mouseMovingState = !1 }).on("mouseover mouseout touchstart touchend", function () { o._mouseMovingState = !1, o.setMousePosition(o.getSettingsManager().getCenter()) }).on("mouseover touchstart", function () { o._activeState = !0 }).on("mouseout touchend", function () { o._activeState = !1 }).on("mousedown touchstart", function (n) { n.preventDefault(), o._movingStateTimeout = setTimeout(function () { o._mouseMovingState = !0, o.getSettingsManager().getElement().addClass(t.fn.smartGraph.classes.moving) }, 100), t(this).trigger(e + ".click", [o.getSettingsManager(), (o.getMousePosition().getX() - o.getSettingsManager().getCenter().getX()) / o.getSettingsManager().getScale(), (o.getSettingsManager().getCenter().getY() - o.getMousePosition().getY()) / o.getSettingsManager().getScale()]) }).on("mousewheel DOMMouseScroll", function (t) { t.preventDefault(), t.originalEvent.wheelDelta > 0 || t.originalEvent.detail < 0 ? o.zoomIn() : o.zoomOut() }).trigger(e + ".init", [o.getSettingsManager()]) }; n.prototype.getSettingsManager = function () { return this._settingsManagerInstance }, n.prototype.getCtxManager = function () { return this._ctxManagerInstance }, n.prototype.getCreatorManager = function () { return this._creatorManagerInstance }, n.prototype.getMousePosition = function () { return this._mousePosition }, n.prototype.setMousePosition = function (t, e) { return this._mousePosition = new a(t, e, !0), this }, n.prototype.processData = function () { var t = this; return t.getSettingsManager().getOptions().data.points.forEach(function (e) { t.getCreatorManager().drawPoint(e) }), t.getSettingsManager().getOptions().data.functions.forEach(function (e) { t.getCreatorManager().drawFunction(e) }), t }, n.prototype.create = function () { return this.processData().getCreatorManager().constructAxises(), this }, n.prototype.reconstruct = function () { return this.getCtxManager().clear(), this.create() }, n.prototype.setOptions = function (t) { return this.getSettingsManager().setOptions(t, !0), this.reconstruct() }, n.prototype.updateData = function (t) { return this.setOptions({ data: t }) }, n.prototype.addData = function (t) { var e = this.getSettingsManager().getOptions().data; return t.hasOwnProperty("points") && t.points.forEach(function (t) { e.points.push(t) }), t.hasOwnProperty("functions") && t.functions.forEach(function (t) { e.functions.push(t) }), this.updateData(e) }, n.prototype.moveRight = function () { return this.setOptions({ move: { x: this.getSettingsManager().getOptions().move.x - this.getSettingsManager().getTicksDistance("x") } }) }, n.prototype.moveLeft = function () { return this.setOptions({ move: { x: this.getSettingsManager().getOptions().move.x + this.getSettingsManager().getTicksDistance("x") } }) }, n.prototype.moveUp = function () { return this.setOptions({ move: { y: this.getSettingsManager().getOptions().move.y - this.getSettingsManager().getTicksDistance("y") } }) }, n.prototype.moveDown = function () { return this.setOptions({ move: { y: this.getSettingsManager().getOptions().move.y + this.getSettingsManager().getTicksDistance("y") } }) }, n.prototype.zoomIn = function () { return this.getSettingsManager().increaseScale(), this.reconstruct() }, n.prototype.zoomOut = function () { return this.getSettingsManager().decreaseScale(), this.reconstruct() }; var i = function (t) { this._ctxManagerInstance = t }; i.prototype.getCtxManager = function () { return this._ctxManagerInstance }, i.prototype.drawAxisesLabels = function () { return this.getCtxManager().setColor(this.getCtxManager().getSettingsManager().getOptions().axises.x.label.color).setStartPoint(new a(this.getCtxManager().getSettingsManager().getWidth(), this.getCtxManager().getSettingsManager().getCenter().getY() + this.getCtxManager().getSettingsManager().getOptions().axises.x.label.padding, !0)).drawText(this.getCtxManager().getSettingsManager().getOptions().axises.x.label.caption, this.getCtxManager().getSettingsManager().getOptions().axises.labels.font, "right", "top").setColor(this.getCtxManager().getSettingsManager().getOptions().axises.y.label.color).setStartPoint(new a(this.getCtxManager().getSettingsManager().getCenter().getX() - this.getCtxManager().getSettingsManager().getOptions().axises.y.label.padding, 0, !0)).drawText(this.getCtxManager().getSettingsManager().getOptions().axises.y.label.caption, this.getCtxManager().getSettingsManager().getOptions().axises.labels.font, "right", "top"), this }, i.prototype.getAxisXNegativeCreatorManager = function () { return new s(this.getCtxManager(), "x", new a(0, this.getCtxManager().getSettingsManager().getCenter().getY(), !0)) }, i.prototype.constructAxises = function () { return this.drawAxisesLabels().drawCenterTitle().getAxisXNegativeCreatorManager().construct(), new s(this.getCtxManager(), "x", new a(this.getCtxManager().getSettingsManager().getWidth(), this.getCtxManager().getSettingsManager().getCenter().getY(), !0)).construct(), new s(this.getCtxManager(), "y", new a(this.getCtxManager().getSettingsManager().getCenter().getX(), 0, !0)).construct(), new s(this.getCtxManager(), "y", new a(this.getCtxManager().getSettingsManager().getCenter().getX(), this.getCtxManager().getSettingsManager().getHeight(), !0)).construct(), this }, i.prototype.drawCenterTitle = function () { return this.getCtxManager().setColor(this.getCtxManager().getSettingsManager().getOptions().axises.ticks.titles.color).setStartPoint(new a(-this.getCtxManager().getSettingsManager().getModifiedTickTitleDistance(), -1 * this.getCtxManager().getSettingsManager().getModifiedTickTitleDistance(), !1)).drawText(this.getCtxManager().getSettingsManager().getOptions().axises.ticks.titles.render(0, this.getAxisXNegativeCreatorManager()), this.getCtxManager().getSettingsManager().getOptions().axises.ticks.titles.font, "right", "top"), this }, i.prototype.drawPoint = function (e) { var n = (e = t.extend(!0, {}, this.getCtxManager().getSettingsManager().getOptions().point, e)).size / (2 * this.getCtxManager().getSettingsManager().getScale()); return this.getCtxManager().setColor(e.color).setStartPoint(new a(e.x - n, e.y, !1)).drawLine(new a(e.x + n, e.y, !1), e.thickness, []).setStartPoint(new a(e.x, e.y - n, !1)).drawLine(new a(e.x, e.y + n, !1), e.thickness, []), e.hintlines.show && this.getCtxManager().setColor(e.hintlines.color).setStartPoint(new a(e.x, e.y, !1)).drawLine(new a(0, e.y, !1), e.hintlines.thickness, e.hintlines.dash).drawLine(new a(e.x, 0, !1), e.hintlines.thickness, e.hintlines.dash), this.getCtxManager().setColor(e.label.color).setStartPoint(new a(e.x + (e.x > 0 ? 1 : -1) * e.label.padding / this.getCtxManager().getSettingsManager().getScale(), e.y + (e.y > 0 ? 1 : -1) * e.label.padding / this.getCtxManager().getSettingsManager().getScale(), !1)).drawText(e.label.render(e.x, e.y, this.getCtxManager().getSettingsManager()), e.label.font, e.x < 0 ? "right" : "left", e.y < 0 ? "top" : "bottom"), this }, i.prototype.drawFunction = function (e) { for (var n = null, i = (e = t.extend(!0, {}, this.getCtxManager().getSettingsManager().getOptions().function, e)).interval[0]; i <= e.interval[1]; i += e.step) { var s = e.relation(i); if (s !== 1 / 0 && s !== -1 / 0 && NaN !== s) { var o = { x: i, y: s, size: null === (e = t.extend(!0, {}, e, e.modifier(i, s, null === n ? null : n.x, null === n ? null : n.y, this.getCtxManager().getSettingsManager()))).points.size ? this.getCtxManager().getSettingsManager().getOptions().point.size : e.points.size, thickness: null === e.points.thickness ? this.getCtxManager().getSettingsManager().getOptions().point.thickness : e.points.thickness, color: null === e.points.color ? this.getCtxManager().getSettingsManager().getOptions().point.color : e.points.color, hintlines: { show: null === e.points.hintlines.show ? this.getCtxManager().getSettingsManager().getOptions().function.points.hintlines.show : e.points.hintlines.show, color: null === e.points.hintlines.color ? this.getCtxManager().getSettingsManager().getOptions().function.points.hintlines.color : e.points.hintlines.color, thickness: null === e.points.hintlines.thickness ? this.getCtxManager().getSettingsManager().getOptions().function.points.hintlines.show : e.points.hintlines.thickness, dash: null === e.points.hintlines.dash ? this.getCtxManager().getSettingsManager().getOptions().function.points.hintlines.dash : e.points.hintlines.dash }, label: { render: null === e.points.labels.render ? this.getCtxManager().getSettingsManager().getOptions().point.label.render : e.points.labels.render, font: null === e.points.labels.font ? this.getCtxManager().getSettingsManager().getOptions().point.label.font : e.points.labels.font, color: null === e.points.labels.color ? this.getCtxManager().getSettingsManager().getOptions().point.label.color : e.points.labels.color, padding: null === e.points.labels.padding ? this.getCtxManager().getSettingsManager().getOptions().point.label.padding : e.points.labels.padding } }; e.connectlines.show && null !== n && this.getCtxManager().setStartPoint(new a(o.x, o.y, !1)).setColor(e.connectlines.color).drawLine(new a(n.x, n.y, !1), e.connectlines.thickness, e.connectlines.dash), this.drawPoint(o), n = o } else n = null } return this }; var s = function (t, e, n) { this._axis = e, this._endPoint = n, this._ctxManagerInstance = t }; s.prototype.getCtxManager = function () { return this._ctxManagerInstance }, s.prototype.getSettingsManager = function () { return this.getCtxManager().getSettingsManager() }, s.prototype.getAxis = function () { return this._axis }, s.prototype.getEndPoint = function () { return this._endPoint }, s.prototype.isVisible = function () { return (!(this.getSettingsManager().getCenter().getX() < 0) || "y" !== this.getAxis() && 0 !== this.getEndPoint().getX()) && (!(this.getSettingsManager().getCenter().getX() > this.getSettingsManager().getWidth() && ("y" === this.getAxis() || this.getEndPoint().getX() > 0)) && ((!(this.getSettingsManager().getCenter().getY() < 0) || "x" !== this.getAxis() && 0 !== this.getEndPoint().getY()) && !(this.getSettingsManager().getCenter().getY() > this.getSettingsManager().getHeight() && ("x" === this.getAxis() || this.getEndPoint().getY() > 0)))) }, s.prototype.isNegative = function () { return this.getEndPoint().getX() < this.getSettingsManager().getCenter().getX() || this.getEndPoint().getY() > this.getSettingsManager().getCenter().getY() }, s.prototype.getLength = function () { return this.getEndPoint().getDistanceFrom(this.getSettingsManager().getCenter()) }, s.prototype.getCountNecessaryTicks = function () { return Math.ceil(this.getLength() / (this.getSettingsManager().getModifiedTicksStep(this.getAxis()) * this.getSettingsManager().getScale())) }, s.prototype.getAxisOptions = function () { return this.getSettingsManager().getOptions().axises[this.getAxis()] }, s.prototype.construct = function () { if (this.isVisible()) { this.getCtxManager().setColor(this.getAxisOptions().color).setStartPoint(this.getSettingsManager().getCenter()).drawLine(this.getEndPoint(), this.getSettingsManager().getOptions().axises.thickness, []); for (var t = this.getCountNecessaryTicks(), e = 1; e < t; e += 1) { var n = e * this.getSettingsManager().getModifiedTicksStep(this.getAxis()); this.isNegative() && (n *= -1), this.drawTick(n) } } return this }, s.prototype.drawTick = function (e) { var n = new o(this.getSettingsManager(), this.getAxis(), e); return this.getCtxManager().setColor(this.getAxisOptions().ticks.color).setStartPoint(n.getLineStartPoint()).drawLine(n.getLineEndPoint(), this.getSettingsManager().getOptions().axises.ticks.thickness, []).setColor(this.getAxisOptions().ticks.titles.color).setStartPoint(n.getTitlePoint()).drawText(this.getAxisOptions().ticks.titles.render(e, this), this.getSettingsManager().getOptions().axises.ticks.titles.font, t.fn.smartGraph.constants.axises[this.getAxis()].ticks.titles.align, t.fn.smartGraph.constants.axises[this.getAxis()].ticks.titles.baseline), this }, s.prototype.getOptimallyRoundedTick = function (t) { if (0 === t) return 0; for (var e = this.isNegative() ? t - this.getSettingsManager().getModifiedTicksStep(this.getAxis()) : t + this.getSettingsManager().getModifiedTicksStep(this.getAxis()), n = 1, i = 0; 0 === (i = t.roundDigits(n)) || i === e.roundDigits(n);)n += 2; return i }; var o = function (t, e, n) { this._axis = e, this._value = n, this._settingsManagerInstance = t }; o.prototype.getSettingsManager = function () { return this._settingsManagerInstance }, o.prototype.getAxis = function () { return this._axis }, o.prototype.getValue = function () { return this._value }, o.prototype.getLineStartPoint = function () { if ("x" === this.getAxis()) return new a(this.getValue(), -1 * this.getSettingsManager().getModifiedTickSize(), !1); if ("y" === this.getAxis()) return new a(-1 * this.getSettingsManager().getModifiedTickSize(), this.getValue(), !1); throw new Error("Invalid axis") }, o.prototype.getLineEndPoint = function () { if ("x" === this.getAxis()) return new a(this.getValue(), this.getSettingsManager().getModifiedTickSize(), !1); if ("y" === this.getAxis()) return new a(this.getSettingsManager().getModifiedTickSize(), this.getValue(), !1); throw new Error("Invalid axis") }, o.prototype.getTitlePoint = function () { if ("x" === this.getAxis()) return new a(this.getValue(), -1 * this.getSettingsManager().getModifiedTickTitleDistance(), !1); if ("y" === this.getAxis()) return new a(-1 * this.getSettingsManager().getModifiedTickTitleDistance(), this.getValue(), !1); throw new Error("Invalid axis") }; var a = function (t, e, n) { this._x = t, this._y = e, this._real = n, this.color = null }; a.prototype.getDistanceFrom = function (t) { return Math.sqrt(Math.pow(t.getX() - this.getX(), 2) + Math.pow(t.getY() - this.getY(), 2)) }, a.prototype.equals = function (e) { return this.getDistanceFrom(e) < t.fn.smartGraph.constants.elementaryDistance }, a.prototype.getX = function () { return this._x }, a.prototype.getY = function () { return this._y }, a.prototype.isReal = function () { return this._real }, a.prototype.setReal = function (t) { return this._real = t, this }; var r = function (e, n) { this._options = null, this._elem = n, this._canvas = t("canvas", this._elem), this._width = this._canvas.outerWidth(), this._height = this._canvas.outerHeight(), this._defaultScale = 1, this.setOptions(e, !1), this._modifierTickStep = { x: 1, y: 1 }, this._scale = this.getDefaultScale() }; r.prototype.getElement = function () { return this._elem }, r.prototype.setOptions = function (e, n) { var i = this; return i._options = t.extend(!0, {}, n ? i._options : t.fn.smartGraph.defaults, e), null === i._options.lines.color && (i._options.lines.color = i._options.color), null === i._options.lines.color && (i._options.lines.color = i._options.color), null === i._options.texts.color && (i._options.texts.color = i._options.color), null === i._options.point.color && (i._options.point.color = i._options.color), null === i._options.point.hintlines.color && (i._options.point.hintlines.color = i._options.lines.color), null === i._options.point.label.color && (i._options.point.label.color = i._options.texts.color), null === i._options.point.thickness && (i._options.point.thickness = i._options.lines.thickness), null === i._options.point.hintlines.thickness && (i._options.point.hintlines.thickness = i._options.lines.thickness), null === i._options.function.connectlines.color && (i._options.function.connectlines.color = i._options.lines.color), null === i._options.function.connectlines.thickness && (i._options.function.connectlines.thickness = i._options.lines.thickness), null === i._options.function.points.color && (i._options.function.points.color = i._options.point.color), null === i._options.function.points.size && (i._options.function.points.size = i._options.point.size), null === i._options.function.points.thickness && (i._options.function.points.thickness = i._options.point.thickness), null === i._options.function.points.hintlines.color && (i._options.function.points.hintlines.color = i._options.point.hintlines.color), null === i._options.function.points.hintlines.size && (i._options.function.points.hintlines.size = i._options.point.hintlines.size), null === i._options.function.points.hintlines.thickness && (i._options.function.points.hintlines.thickness = i._options.point.hintlines.thickness), null === i._options.function.points.hintlines.dash && (i._options.function.points.hintlines.dash = i._options.point.hintlines.dash), null === i._options.function.points.labels.color && (i._options.function.points.labels.color = i._options.point.label.color), null === i._options.function.points.labels.render && (i._options.function.points.labels.render = i._options.point.label.render), null === i._options.function.points.labels.font && (i._options.function.points.labels.font = i._options.point.label.font), null === i._options.function.points.labels.padding && (i._options.function.points.labels.padding = i._options.point.label.padding), null === i._options.axises.thickness && (i._options.axises.thickness = i._options.lines.thickness), null === i._options.axises.ticks.thickness && (i._options.axises.ticks.thickness = i._options.axises.thickness), null === i._options.axises.color && (i._options.axises.color = i._options.lines.color), null === i._options.axises.ticks.color && (i._options.axises.ticks.color = i._options.lines.color), null === i._options.axises.ticks.titles.color && (i._options.axises.ticks.titles.color = i._options.texts.color), null === i._options.axises.labels.color && (i._options.axises.labels.color = i._options.texts.color), t.fn.smartGraph.constants.axises.names.forEach(function (t) { null === i._options.axises[t].ticks.step && (i._options.axises[t].ticks.step = i._options.axises.ticks.step), null === i._options.axises[t].ticks.titles.render && (i._options.axises[t].ticks.titles.render = i._options.axises.ticks.titles.render), null === i._options.axises[t].color && (i._options.axises[t].color = i._options.axises.color), null === i._options.axises[t].ticks.color && (i._options.axises[t].ticks.color = i._options.axises.ticks.color), null === i._options.axises[t].ticks.titles.color && (i._options.axises[t].ticks.titles.color = i._options.axises.ticks.titles.color), null === i._options.axises[t].label.color && (i._options.axises[t].label.color = i._options.axises.labels.color) }), null === i._options.function.step && (i._options.function.step = i._options.axises.x.ticks.step), i._options.responsive.enable ? i.getElement().addClass(t.fn.smartGraph.classes.responsive) : i.getElement().removeClass(t.fn.smartGraph.classes.responsive), i.setDefaultScale() }, r.prototype.getOptions = function () { return this._options }, r.prototype.getTicksDistance = function (t) { return this.getScale() * (this.getOptions().axises[t].ticks.step * this._modifierTickStep[t]) }, r.prototype.getModifiedTicksStep = function (e) { return this.getScale() === this.getDefaultScale() ? this.getOptions().axises[e].ticks.step : (this.getTicksDistance(e) < t.fn.smartGraph.constants.readableTicksDistance[0] ? this._modifierTickStep[e] = t.fn.smartGraph.constants.readableTicksDistance[1] / (this.getOptions().axises[e].ticks.step * this.getScale()) : this.getTicksDistance(e) > t.fn.smartGraph.constants.readableTicksDistance[1] && (this._modifierTickStep[e] = t.fn.smartGraph.constants.readableTicksDistance[0] / (this.getOptions().axises[e].ticks.step * this.getScale())), this.getOptions().axises[e].ticks.step * this._modifierTickStep[e]) }, r.prototype.getModifiedTickSize = function () { return this.getOptions().axises.ticks.size / (2 * this.getScale()) }, r.prototype.getModifiedTickTitleDistance = function () { return (this.getOptions().axises.ticks.size + this.getOptions().axises.ticks.titles.padding) / (2 * this.getScale()) }, r.prototype.updateWidth = function () { return this._width = this.getElement().outerWidth(), this.getCanvas().attr("width", this._width), this }, r.prototype.updateHeight = function () { return this._height = this.getElement().outerWidth() / this.getOptions().responsive.ratio, this.getCanvas().attr("height", this._height), this }, r.prototype.getWidth = function () { return this._width }, r.prototype.getHeight = function () { return this._height }, r.prototype.getCenter = function () { return new a(this.getWidth() / 2 + this.getOptions().move.x, this.getHeight() / 2 - this.getOptions().move.y, !0) }, r.prototype.getCanvas = function () { return this._canvas }, r.prototype.getScale = function () { return this._scale }, r.prototype.getDefaultScale = function () { return this._defaultScale }, r.prototype.setDefaultScale = function () { return this._defaultScale = t.fn.smartGraph.constants.readableTicksDistance.reduce(function (t, e) { return (t + e) / 2 }) / Math.min(this.getOptions().axises.x.ticks.step, this.getOptions().axises.y.ticks.step), this }, r.prototype.increaseScale = function () { return this._scale /= t.fn.smartGraph.constants.scaleElementaryChange, this }, r.prototype.decreaseScale = function () { return this._scale *= t.fn.smartGraph.constants.scaleElementaryChange, this }; var g = function (e) { this._settingsManagerInstance = e, this._ctx = this.getSettingsManager().getCanvas().get(0).getContext("2d"), this._color = t.fn.smartGraph.defaults.color, this._startPoint = new a(0, 0, !0) }; g.prototype.getSettingsManager = function () { return this._settingsManagerInstance }, g.prototype.drawLine = function (t, e, n) { return this.getCtx().beginPath(), this.getCtx().moveTo(this.getRealX(this.getStartPoint()), this.getRealY(this.getStartPoint())), this.getCtx().lineTo(this.getRealX(t), this.getRealY(t)), this.getCtx().strokeStyle = this.getColor(), this.getCtx().lineWidth = e, this.getCtx().setLineDash(n), this.getCtx().stroke(), this }, g.prototype.drawText = function (t, e, n, i) { return this.getCtx().font = e, this.getCtx().fillStyle = this.getColor(), this.getCtx().textAlign = n, this.getCtx().textBaseline = i, this.getCtx().fillText(t, this.getRealX(this.getStartPoint()), this.getRealY(this.getStartPoint())), this }, g.prototype.getCtx = function () { return this._ctx }, g.prototype.setColor = function (t) { return this._color = t, this }, g.prototype.getColor = function () { return this._color }, g.prototype.setStartPoint = function (t) { return this._startPoint = t, this }, g.prototype.getStartPoint = function () { return this._startPoint }, g.prototype.clear = function () { return this.getCtx().clearRect(0, 0, this.getSettingsManager().getWidth(), this.getSettingsManager().getHeight()), this }, g.prototype.getRealX = function (t) { return t.isReal() ? t.getX() : this.getSettingsManager().getCenter().getX() + t.getX() * this.getSettingsManager().getScale() }, g.prototype.getRealY = function (t) { return t.isReal() ? t.getY() : this.getSettingsManager().getCenter().getY() - t.getY() * this.getSettingsManager().getScale() }, t.fn.smartGraph = function (i) { var s = i instanceof String || "string" == typeof i, o = arguments; if (s && "instance" === i) { var a = this.data("smartGraphManagerInstance"); if (a instanceof n) return a; t.error(e + " has not been initialized") } return this.each(function () { var e = t(this); if (s) { var a = e.data("smartGraphManagerInstance"); a instanceof n && a[i] instanceof Function && a[i].apply(a, Array.prototype.slice.call(o, 1)) } else e.data("smartGraphManagerInstance") || e.data("smartGraphManagerInstance", new n(e, i)) }) }, t.fn.smartGraph.classes = { root: "smart-graph", responsive: "smart-graph-responsive", moving: "smart-graph-moving" }, t.fn.smartGraph.constants = { axises: { names: new Array("x", "y"), x: { ticks: { titles: { baseline: "top", align: "center" } } }, y: { ticks: { titles: { baseline: "middle", align: "right" } } } }, elementaryDistance: 4, scaleElementaryChange: .9, readableTicksDistance: [40, 90] }, t.fn.smartGraph.defaults = { color: "#343a40", axises: { thickness: null, color: null, ticks: { step: 1, size: 8, thickness: null, color: null, titles: { font: "10px Calibri", padding: 10, color: null, render: function (t, e) { return e.getOptimallyRoundedTick(t) } } }, labels: { font: "20px Calibri", color: null }, x: { color: null, label: { caption: "x", color: null, padding: 20 }, ticks: { step: null, color: null, titles: { color: null, render: null } } }, y: { color: null, label: { caption: "y", color: null, padding: 20 }, ticks: { step: null, color: null, titles: { color: null, render: null } } } }, data: { points: [], functions: [] }, point: { size: 10, thickness: 2, color: null, hintlines: { show: !1, color: null, thickness: null, dash: [2, 2] }, label: { font: "13px Calibri", color: null, padding: 7, render: function (t, e) { return "(" + t.roundDigits(2) + ", " + e.roundDigits(2) + ")" } } }, function: { step: null, modifier: function () { return null }, connectlines: { show: !0, color: null, thickness: null, dash: [] }, points: { color: null, size: null, thickness: null, hintlines: { show: null, color: null, thickness: null, dash: null }, labels: { font: null, color: null, padding: null, render: function () { return "" } } } }, lines: { color: null, thickness: 1 }, texts: { color: null }, move: { x: 0, y: 0 }, responsive: { enable: !0, ratio: 16 / 9 } }, Number.prototype.roundDigits = function (t) { var e = Math.pow(10, t); return Math.round(this.valueOf() * e) / e } });